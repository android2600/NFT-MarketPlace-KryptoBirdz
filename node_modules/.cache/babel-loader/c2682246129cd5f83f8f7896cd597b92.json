{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from 'web3';\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport KryptoBird from '../abis/KryptoBird.json';\nvar ethereumButton = document.querySelector('.enableEthereumButton');\nvar showAccount = document.querySelector('.showAccount');\nethereumButton.addEventListener('click', function () {\n  getAccount();\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var ethereumButton, showAccount, getAccount, _getAccount;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _getAccount = function _ref2() {\n                  _getAccount = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee() {\n                    var accounts, account;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return ethereum.request({\n                              method: 'eth_requestAccounts'\n                            });\n\n                          case 2:\n                            accounts = _context.sent;\n                            account = accounts[0];\n                            showAccount.innerHTML = account;\n\n                          case 5:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n                  return _getAccount.apply(this, arguments);\n                };\n\n                getAccount = function _ref() {\n                  return _getAccount.apply(this, arguments);\n                };\n\n                ethereumButton = document.querySelector('.enableEthereumButton');\n                showAccount = document.querySelector('.showAccount');\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"NFT MarketPlace\"), React.createElement(\"button\", {\n        class: \"enableEthereumButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Enable Ethereum\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Account: \", React.createElement(\"span\", {\n        class: \"showAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/src/components/App.js"],"names":["React","Component","Web3","detectEthereumProvider","KryptoBird","ethereumButton","document","querySelector","showAccount","addEventListener","getAccount","App","ethereum","request","method","accounts","account","innerHTML"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,IAAMC,cAAc,GAAGC,QAAQ,CAACC,aAAT,CAAuB,uBAAvB,CAAvB;AACA,IAAMC,WAAW,GAAGF,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAApB;AAEAF,cAAc,CAACI,gBAAf,CAAgC,OAAhC,EAAyC,YAAM;AAC3CC,EAAAA,UAAU;AACT,CAFL;;IAIMC,G;;;;;;;;;;;;;;;;;yCAKaD,U;;;;;;;;;2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACuBE,QAAQ,CAACC,OAAT,CAAiB;AAAEC,8BAAAA,MAAM,EAAE;AAAV,6BAAjB,CADvB;;AAAA;AACMC,4BAAAA,QADN;AAEMC,4BAAAA,OAFN,GAEgBD,QAAQ,CAAC,CAAD,CAFxB;AAGAP,4BAAAA,WAAW,CAACS,SAAZ,GAAwBD,OAAxB;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mB;;;;AAAeN,gBAAAA,U;;;;AAHTL,gBAAAA,c,GAAiBC,QAAQ,CAACC,aAAT,CAAuB,uBAAvB,C;AACjBC,gBAAAA,W,GAAcF,QAAQ,CAACC,aAAT,CAAuB,cAAvB,C;;;;;;;;;;;;;;;;;;6BAQZ;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAa;AAAM,QAAA,KAAK,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb,CAHJ,CADJ;AAOH;;;;EAnBaN,S;;AAsBlB,eAAeU,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from 'web3';\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport KryptoBird from '../abis/KryptoBird.json';\n\nconst ethereumButton = document.querySelector('.enableEthereumButton');\nconst showAccount = document.querySelector('.showAccount');\n\nethereumButton.addEventListener('click', () => {\n    getAccount();\n    });\n\nclass App extends Component{\n    async componentDidMount() {\n    const ethereumButton = document.querySelector('.enableEthereumButton');\n    const showAccount = document.querySelector('.showAccount');\n    \n    async function getAccount() {\n    const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n    const account = accounts[0];\n    showAccount.innerHTML = account;\n    }\n    }\n    render(){\n        return(\n            <div>\n                <h1>NFT MarketPlace</h1>\n                <button class=\"enableEthereumButton\">Enable Ethereum</button>\n                <h2>Account: <span class=\"showAccount\"></span></h2>\n            </div>\n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}