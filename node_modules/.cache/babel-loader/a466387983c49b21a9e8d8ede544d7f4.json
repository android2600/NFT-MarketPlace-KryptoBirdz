{"ast":null,"code":"import _toConsumableArray from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport KryptoBird from '../abis/KryptoBird.json';\nimport Web3 from \"web3\";\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardImage, MDBCardText } from \"mdb-react-ui-kit\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return detectEthereumProvider();\n\n              case 2:\n                provider = _context2.sent;\n\n                if (provider) {\n                  console.log(\"Connected\");\n                  window.web3 = new Web3(provider);\n                } else {\n                  console.log(\"Wallet not found\");\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkdata, abi, address, contract, totalSupply, i, Kryptobird;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return window.ethereum.request({\n                  method: \"eth_requestAccounts\"\n                });\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                console.log(this.state.account);\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context3.sent;\n                this.setState({\n                  networkId: networkId\n                });\n                networkdata = KryptoBird.networks[networkId];\n\n                if (!networkdata) {\n                  _context3.next = 35;\n                  break;\n                }\n\n                abi = KryptoBird.abi;\n                address = networkdata.address;\n                contract = new web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: contract\n                }); //{contract:contract}\n\n                console.log(this.state.contract);\n                _context3.next = 19;\n                return contract.methods.totalSupply().call();\n\n              case 19:\n                totalSupply = _context3.sent;\n                this.setState({\n                  totalSupply: totalSupply\n                });\n                console.log(this.state.totalSupply);\n                i = 1;\n\n              case 23:\n                if (!(i <= totalSupply)) {\n                  _context3.next = 32;\n                  break;\n                }\n\n                _context3.next = 26;\n                return contract.methods.kryptoBirdz(i - 1).call();\n\n              case 26:\n                Kryptobird = _context3.sent;\n                console.log(Kryptobird);\n                this.setState({\n                  KryptoBird: [].concat(_toConsumableArray(this.state.KryptoBird), [Kryptobird]) //spread operator!!!\n\n                });\n\n              case 29:\n                i++;\n                _context3.next = 23;\n                break;\n\n              case 32:\n                console.log(this.state.KryptoBird);\n                _context3.next = 36;\n                break;\n\n              case 35:\n                window.alert('smart contract not deployed');\n\n              case 36:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.mint = function (kryptoBird) {\n      _this.state.contract.methods.mint(kryptoBird).send({\n        from: _this.state.account\n      }).once('receipt', function (receipt) {\n        _this.setState({\n          KryptoBird: [].concat(_toConsumableArray(_this.state.KryptoBird), [KryptoBird]) //spread operator!!!\n\n        });\n      });\n    };\n\n    _this.state = {\n      account: \"\",\n      networkId: \"\",\n      contract: null,\n      totalSupply: 0,\n      KryptoBird: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, console.log(this.state.KryptoBird), React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-brand col-sm-3 col-md-3 mr-0\",\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"KryptoBirdz NFT\"), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.account), React.createElement(\"li\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.networkId))), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main>\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        style: {\n          opacity: \"0.8\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          color: \"black\",\n          margin: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"KryptoBirds NFT Marketplace\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var kryptoBird = _this2.kryptoBird.value;\n\n          _this2.mint(kryptoBird);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a file location\",\n        className: \"form-control mb-1\",\n        ref: function ref(input) {\n          _this2.kryptoBird = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        style: {\n          margin: '6px'\n        },\n        type: \"submit\",\n        className: \"btn btn-primary btn-black\",\n        value: \"MINT\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row textCenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, this.state.KryptoBird.map(function (KryptoBird, key) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          className: \"token\",\n          style: {\n            maxWidth: \"22rem\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(MDBCardImage, {\n          className: \"img\",\n          src: KryptoBird,\n          position: \"top\",\n          height: \"200rem\",\n          style: {\n            marinRight: \"4px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }), React.createElement(MDBCardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(MDBCardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \" KryptoBirdz \"), React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"The KryptoBirdz are 10 uniquely generated KBirdz from Galaxy far far away.\")))));\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/src/components/App.js"],"names":["React","Component","detectEthereumProvider","KryptoBird","Web3","MDBCard","MDBCardBody","MDBCardTitle","MDBCardImage","MDBCardText","App","loadWeb3","loadBlockchainData","provider","console","log","window","web3","ethereum","request","method","accounts","setState","account","state","eth","net","getId","networkId","networkdata","networks","abi","address","contract","Contract","methods","totalSupply","call","i","kryptoBirdz","Kryptobird","alert","props","mint","kryptoBird","send","from","once","receipt","color","opacity","margin","event","preventDefault","value","input","map","key","maxWidth","marinRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport KryptoBird from '../abis/KryptoBird.json';\nimport Web3 from \"web3\";\nimport {MDBCard,MDBCardBody,MDBCardTitle,MDBCardImage,MDBCardText}from \"mdb-react-ui-kit\"\nimport \"./App.css\"\n\n\nclass App extends Component{\n    async componentDidMount(){\n        await this.loadWeb3();\n        await this.loadBlockchainData();\n    }\n    async loadWeb3(){\n        const provider = await detectEthereumProvider();\n        if(provider){\n            console.log(\"Connected\")\n            window.web3=new Web3(provider)\n        }\n        else{\n            console.log(\"Wallet not found\")\n        }\n    }\n    async loadBlockchainData(){\n        const web3=window.web3\n\n        const accounts = await window.ethereum.request({method:\"eth_requestAccounts\"});\n        this.setState({account:accounts[0]});\n        console.log(this.state.account);\n        const networkId=await web3.eth.net.getId();\n        this.setState({networkId:networkId});\n        const networkdata=KryptoBird.networks[networkId];\n        if(networkdata){\n            var abi=KryptoBird.abi;\n            var address=networkdata.address;\n            var contract= new web3.eth.Contract(abi,address);\n            this.setState({contract}); //{contract:contract}\n            console.log(this.state.contract);\n            \n            const totalSupply=await contract.methods.totalSupply().call();\n            this.setState({totalSupply});\n            console.log(this.state.totalSupply);\n\n            for(let i=1;i<=totalSupply;i++){\n                const Kryptobird= await contract.methods.kryptoBirdz(i-1).call();\n                console.log(Kryptobird);\n                {this.setState({\n                    KryptoBird:[...this.state.KryptoBird,Kryptobird] //spread operator!!!\n                })}\n            }\n            console.log(this.state.KryptoBird)\n        }\n        else{\n            window.alert('smart contract not deployed')\n        }\n    }\n    \n    mint = (kryptoBird)=>{\n        this.state.contract.methods.mint(kryptoBird).send({from:this.state.account}).once('receipt',(receipt)=>{\n            this.setState({\n            KryptoBird:[...this.state.KryptoBird,KryptoBird] //spread operator!!!\n        })})\n    }\n\n    constructor(props) {\n        super(props);\n        this.state={\n            account: \"\",\n            networkId: \"\",\n            contract:null,\n            totalSupply:0,\n            KryptoBird:[]\n        }\n    }\n\n    render(){\n        return(\n            <div>\n            {console.log(this.state.KryptoBird)}\n            <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                <div className=\"navbar-brand col-sm-3 col-md-3 mr-0\" style={{color:\"white\"}}>\n                    KryptoBirdz NFT\n                </div>\n            <ul className=\"navbar-nav px-3\">\n                <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block text-white\">\n                    {this.state.account}\n                </li>\n                <li className=\"text-white\">{this.state.networkId}</li>\n            </ul>\n            </nav>\n            <div className=\"container-fluid mt-5\">\n                <div className=\"row\">\n                    <main role=\"main>\" className=\"col-lg-12 d-flex text-center\">\n                        <div className=\"content mr-auto ml-auto\"\n                        style={{opacity:\"0.8\"}}\n                        >\n                                <h1 style={{color:\"black\",margin:\"50px\"}}>KryptoBirds NFT Marketplace</h1>\n                                <form onSubmit={(event)=>{\n                                    event.preventDefault()\n                                    const kryptoBird= this.kryptoBird.value\n                                    this.mint(kryptoBird)\n                                }}>\n                                    <input\n                                    type=\"text\"\n                                    placeholder=\"Add a file location\"\n                                    className=\"form-control mb-1\"\n                                    ref={(input)=>{this.kryptoBird=input}}\n                                    />\n                                    <input style={{margin:'6px'}}\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-black\"\n                                    value=\"MINT\"\n                                    />\n                                </form>\n                            \n\n                        </div>\n                    </main>\n                </div>\n            <hr></hr>\n            <div className=\"row textCenter\">\n                {this.state.KryptoBird.map((KryptoBird,key)=>{\n                    return(\n                        <div>\n                            <div>\n                                <MDBCard className=\"token\" style={{maxWidth:\"22rem\"}}>\n                                <MDBCardImage className=\"img\" src={KryptoBird} position=\"top\" height=\"200rem\" style={{marinRight:\"4px\"}}/>\n                                <MDBCardBody>\n                                <MDBCardTitle> KryptoBirdz </MDBCardTitle>\n                                <MDBCardText>\n                                    The KryptoBirdz are 10 uniquely generated KBirdz from Galaxy far far away.\n                                </MDBCardText>\n                                </MDBCardBody>\n                                </MDBCard>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}