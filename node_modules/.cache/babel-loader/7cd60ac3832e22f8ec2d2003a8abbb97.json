{"ast":null,"code":"import _regeneratorRuntime from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport KryptoBird from '../abis/KryptoBird.json';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return detectEthereumProvider();\n\n              case 2:\n                provider = _context2.sent;\n\n                if (provider) {\n                  console.log(\"Connected\");\n                } else {\n                  console.log(\"Wallet not found\");\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return window.ethereum.request({\n                  method: \"eth_requestAccounts\"\n                });\n\n              case 2:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts\n                });\n                console.log(this.state.account);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-brand col-sm-3 col-md-3 mr-0\",\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"KryptoBirdz NFT\")), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.state.account))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/aayushsingh/Documents/GitHub/NFT-MarketPlace-KryptoBirdz/src/components/App.js"],"names":["React","Component","detectEthereumProvider","KryptoBird","App","loadWeb3","loadBlockchainData","provider","console","log","window","ethereum","request","method","accounts","setState","account","state","props","color"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;IAEMC,G;;;;;;;;;;;;;;;;uBAEQ,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAGiBJ,sBAAsB,E;;;AAAvCK,gBAAAA,Q;;AACN,oBAAGA,QAAH,EAAY;AACRC,kBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,iBAFD,MAGI;AACAD,kBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAGsBC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAACC,kBAAAA,MAAM,EAAC;AAAR,iBAAxB,C;;;AAAjBC,gBAAAA,Q;AACN,qBAAKC,QAAL,CAAc;AAACC,kBAAAA,OAAO,EAACF;AAAT,iBAAd;AACAN,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKQ,KAAL,CAAWD,OAAvB;;;;;;;;;;;;;;;;;;AAGJ,eAAYE,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKD,KAAL,GAAW;AACPD,MAAAA,OAAO,EAAE;AADF,KAAX;AAFe;AAKlB;;;;6BAEO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAqD,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAC;AAAP,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADA,EAOA;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,kDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKF,KAAL,CAAWD,OADhB,CADJ,CADJ,CAPA,CADJ;AAiBH;;;;EA7Caf,S;;AAgDlB,eAAeG,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport KryptoBird from '../abis/KryptoBird.json';\n\nclass App extends Component{\n    async componentDidMount(){\n        await this.loadWeb3();\n        await this.loadBlockchainData();\n    }\n    async loadWeb3(){\n        const provider = await detectEthereumProvider();\n        if(provider){\n            console.log(\"Connected\")\n        }\n        else{\n            console.log(\"Wallet not found\")\n        }\n    }\n    async loadBlockchainData(){\n        const accounts = await window.ethereum.request({method:\"eth_requestAccounts\"});\n        this.setState({account:accounts})\n        console.log(this.state.account)\n    }\n\n    constructor(props) {\n        super(props);\n        this.state={\n            account: \"\"\n        }\n    }\n\n    render(){\n        return(\n            <div>\n            <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                <div className=\"navbar-brand col-sm-3 col-md-3 mr-0\" style={{color:\"white\"}}>\n                    KryptoBirdz NFT\n                </div>\n            </nav>\n        \n            <ul className=\"navbar-nav px-3\">\n                <h4 className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n                    <small className=\"text-white\">\n                        {this.state.account}\n                    </small>\n                </h4>\n            </ul>\n            </div>\n        )\n    }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}